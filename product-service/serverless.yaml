service: product-service

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1

  environment:
    PG_HOST: lesson4.czoz6duffqoz.eu-central-1.rds.amazonaws.com
    PG_PORT: 5432
    PG_DATABASE: lesson4
    PG_USERNAME: postgres
    PG_PASSWORD:
    SNS_ARN:
      Ref: SNSTopic
# Note: not need in this module
#   SQS_URL:
#      Ref: SQSQueue
  iamRoleStatements:
    - Effect: "Allow"
      Action: "sns:*"
      Resource:
        - Ref: SNSTopic

# !Note: Not needed hear as permission to send message to sqs should be defined for lambda importFileParser from import-service
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action: "sqs:*"
#      Resource:
#        - Fn::GetAtt: [SQSQueue, Arn]

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true

functions:
  products:
    handler: handler.products
    events:
      - http:
          path: products
          method: get

  productNew:
    handler: handler.productNew
    events:
      - http:
          path: products
          method: post

  productById:
    handler: handler.productById
    events:
      - http:
          path: products/{productId}
          method: get
          request:
            parameters:
              paths:
                productId: true

  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: constantlearning1985@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic